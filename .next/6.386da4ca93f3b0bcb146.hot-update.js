webpackHotUpdate(6,{

/***/ 1107:
/***/ (function(module, exports, __webpack_require__) {

"use strict";
/* WEBPACK VAR INJECTION */(function(__resourceQuery) {

Object.defineProperty(exports, "__esModule", {
  value: true
});

var _regenerator = __webpack_require__(87);

var _regenerator2 = _interopRequireDefault(_regenerator);

var _asyncToGenerator2 = __webpack_require__(88);

var _asyncToGenerator3 = _interopRequireDefault(_asyncToGenerator2);

var _getPrototypeOf = __webpack_require__(44);

var _getPrototypeOf2 = _interopRequireDefault(_getPrototypeOf);

var _classCallCheck2 = __webpack_require__(15);

var _classCallCheck3 = _interopRequireDefault(_classCallCheck2);

var _createClass2 = __webpack_require__(16);

var _createClass3 = _interopRequireDefault(_createClass2);

var _possibleConstructorReturn2 = __webpack_require__(45);

var _possibleConstructorReturn3 = _interopRequireDefault(_possibleConstructorReturn2);

var _inherits2 = __webpack_require__(49);

var _inherits3 = _interopRequireDefault(_inherits2);

var _react = __webpack_require__(17);

var _react2 = _interopRequireDefault(_react);

var _semanticUiReact = __webpack_require__(464);

var _Layout = __webpack_require__(1087);

var _Layout2 = _interopRequireDefault(_Layout);

var _factory = __webpack_require__(930);

var _factory2 = _interopRequireDefault(_factory);

var _web = __webpack_require__(931);

var _web2 = _interopRequireDefault(_web);

var _routes = __webpack_require__(704);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var _jsxFileName = '/home/saumya/HashHacks3_HackPerts/pages/campaigns/new.js?entry';


var CampaignNew = function (_Component) {
  (0, _inherits3.default)(CampaignNew, _Component);

  function CampaignNew() {
    var _ref,
        _this2 = this;

    var _temp, _this, _ret;

    (0, _classCallCheck3.default)(this, CampaignNew);

    for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {
      args[_key] = arguments[_key];
    }

    return _ret = (_temp = (_this = (0, _possibleConstructorReturn3.default)(this, (_ref = CampaignNew.__proto__ || (0, _getPrototypeOf2.default)(CampaignNew)).call.apply(_ref, [this].concat(args))), _this), _this.state = {
      minimumContribution: '',
      errorMessage: '',
      loading: false,
      modalOpen: false
    }, _this.handleClose = function () {
      return _this.setState({ modalOpen: false });
    }, _this.handleOpen = function () {
      return _this.setState({ modalOpen: true });
    }, _this.onSubmit = function () {
      var _ref2 = (0, _asyncToGenerator3.default)( /*#__PURE__*/_regenerator2.default.mark(function _callee(event) {
        var accounts;
        return _regenerator2.default.wrap(function _callee$(_context) {
          while (1) {
            switch (_context.prev = _context.next) {
              case 0:
                event.preventDefault();

                _this.setState({ loading: true, errorMessage: '' });

                _context.prev = 2;
                _context.next = 5;
                return _web2.default.eth.getAccounts();

              case 5:
                accounts = _context.sent;
                _context.next = 8;
                return _factory2.default.methods.createCampaign(_this.state.minimumContribution).send({
                  from: accounts[0]
                });

              case 8:
                _context.next = 13;
                break;

              case 10:
                _context.prev = 10;
                _context.t0 = _context['catch'](2);

                _this.setState({ errorMessage: _context.t0.message });

              case 13:

                _this.setState({ loading: false, modalOpen: true });

              case 14:
              case 'end':
                return _context.stop();
            }
          }
        }, _callee, _this2, [[2, 10]]);
      }));

      return function (_x) {
        return _ref2.apply(this, arguments);
      };
    }(), _temp), (0, _possibleConstructorReturn3.default)(_this, _ret);
  }

  (0, _createClass3.default)(CampaignNew, [{
    key: 'render',
    value: function render() {
      var _this3 = this;

      return _react2.default.createElement(_Layout2.default, {
        __source: {
          fileName: _jsxFileName,
          lineNumber: 42
        }
      }, _react2.default.createElement('h3', {
        __source: {
          fileName: _jsxFileName,
          lineNumber: 43
        }
      }, 'Create a Campaign'), _react2.default.createElement(_semanticUiReact.Form, { onSubmit: this.onSubmit, error: !!this.state.errorMessage, __source: {
          fileName: _jsxFileName,
          lineNumber: 45
        }
      }, _react2.default.createElement(_semanticUiReact.Form.Field, {
        __source: {
          fileName: _jsxFileName,
          lineNumber: 46
        }
      }, _react2.default.createElement('label', {
        __source: {
          fileName: _jsxFileName,
          lineNumber: 47
        }
      }, 'Minimum Contribution'), _react2.default.createElement(_semanticUiReact.Input, {
        label: 'wei',
        labelPosition: 'right',
        value: this.state.minimumContribution,
        onChange: function onChange(event) {
          return _this3.setState({ minimumContribution: event.target.value });
        },
        __source: {
          fileName: _jsxFileName,
          lineNumber: 48
        }
      })), _react2.default.createElement(_semanticUiReact.Message, { error: true, header: 'Oops!', content: this.state.errorMessage, __source: {
          fileName: _jsxFileName,
          lineNumber: 57
        }
      }), _react2.default.createElement(_semanticUiReact.Button, { loading: this.state.loading, primary: true, __source: {
          fileName: _jsxFileName,
          lineNumber: 58
        }
      }, 'Create!')), _react2.default.createElement(_semanticUiReact.Modal, {
        open: this.state.modalOpen,
        onClose: this.handleClose,
        basic: true,
        size: 'small',
        __source: {
          fileName: _jsxFileName,
          lineNumber: 62
        }
      }, _react2.default.createElement(_semanticUiReact.Header, { icon: 'browser', content: 'Cookies policy', __source: {
          fileName: _jsxFileName,
          lineNumber: 68
        }
      }), _react2.default.createElement(_semanticUiReact.Modal.Content, {
        __source: {
          fileName: _jsxFileName,
          lineNumber: 69
        }
      }, _react2.default.createElement('h3', {
        __source: {
          fileName: _jsxFileName,
          lineNumber: 70
        }
      }, 'Campaign Has Been Successfully Created')), _react2.default.createElement(_semanticUiReact.Modal.Actions, {
        __source: {
          fileName: _jsxFileName,
          lineNumber: 72
        }
      }, _react2.default.createElement(_semanticUiReact.Button, { color: 'green', onClick: this.handleClose, inverted: true, __source: {
          fileName: _jsxFileName,
          lineNumber: 73
        }
      }, _react2.default.createElement(_semanticUiReact.Icon, { name: 'checkmark', __source: {
          fileName: _jsxFileName,
          lineNumber: 74
        }
      }), ' Got it'))));
    }
  }]);

  return CampaignNew;
}(_react.Component);

exports.default = CampaignNew;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInVua25vd24iXSwibmFtZXMiOlsiX2pzeEZpbGVOYW1lIiwiQ2FtcGFpZ25OZXciLCJfQ29tcG9uZW50IiwiX3JlZiIsIl90aGlzMiIsIl90ZW1wIiwiX3RoaXMiLCJfcmV0IiwiX2xlbiIsImFyZ3VtZW50cyIsImxlbmd0aCIsImFyZ3MiLCJBcnJheSIsIl9rZXkiLCJfX3Byb3RvX18iLCJjYWxsIiwiYXBwbHkiLCJjb25jYXQiLCJzdGF0ZSIsIm1pbmltdW1Db250cmlidXRpb24iLCJlcnJvck1lc3NhZ2UiLCJsb2FkaW5nIiwibW9kYWxPcGVuIiwiaGFuZGxlQ2xvc2UiLCJzZXRTdGF0ZSIsImhhbmRsZU9wZW4iLCJvblN1Ym1pdCIsIl9yZWYyIiwibWFyayIsIl9jYWxsZWUiLCJldmVudCIsImFjY291bnRzIiwid3JhcCIsIl9jYWxsZWUkIiwiX2NvbnRleHQiLCJwcmV2IiwibmV4dCIsInByZXZlbnREZWZhdWx0IiwiZXRoIiwiZ2V0QWNjb3VudHMiLCJzZW50IiwibWV0aG9kcyIsImNyZWF0ZUNhbXBhaWduIiwic2VuZCIsImZyb20iLCJ0MCIsIm1lc3NhZ2UiLCJzdG9wIiwiX3giLCJrZXkiLCJ2YWx1ZSIsInJlbmRlciIsIl90aGlzMyIsImNyZWF0ZUVsZW1lbnQiLCJfX3NvdXJjZSIsImZpbGVOYW1lIiwibGluZU51bWJlciIsImVycm9yIiwiRmllbGQiLCJsYWJlbCIsImxhYmVsUG9zaXRpb24iLCJvbkNoYW5nZSIsInRhcmdldCIsImhlYWRlciIsImNvbnRlbnQiLCJwcmltYXJ5Iiwib3BlbiIsIm9uQ2xvc2UiLCJiYXNpYyIsInNpemUiLCJpY29uIiwiQ29udGVudCIsIkFjdGlvbnMiLCJjb2xvciIsIm9uQ2xpY2siLCJpbnZlcnRlZCIsIm5hbWUiXSwibWFwcGluZ3MiOiI7Ozs7OztBQUFBOzs7O0FBQ0E7Ozs7QUFDQTs7OztBQUNBOzs7O0FBQ0E7Ozs7QUFDQTs7OztBQUNBOzs7O0FBRUE7Ozs7QUFDQTs7QUFDQTs7OztBQUNBOzs7O0FB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

 ;(function register() { /* react-hot-loader/webpack */ if (true) { if (typeof __REACT_HOT_LOADER__ === 'undefined') { return; } /* eslint-disable camelcase, no-undef */ var webpackExports = typeof __webpack_exports__ !== 'undefined' ? __webpack_exports__ : module.exports; /* eslint-enable camelcase, no-undef */ if (typeof webpackExports === 'function') { __REACT_HOT_LOADER__.register(webpackExports, 'module.exports', "/home/saumya/HashHacks3_HackPerts/pages/campaigns/new.js"); return; } /* eslint-disable no-restricted-syntax */ for (var key in webpackExports) { /* eslint-enable no-restricted-syntax */ if (!Object.prototype.hasOwnProperty.call(webpackExports, key)) { continue; } var namedExport = void 0; try { namedExport = webpackExports[key]; } catch (err) { continue; } __REACT_HOT_LOADER__.register(namedExport, key, "/home/saumya/HashHacks3_HackPerts/pages/campaigns/new.js"); } } })();
    (function (Component, route) {
      if (false) return
      if (false) return

      var qs = __webpack_require__(84)
      var params = qs.parse(__resourceQuery.slice(1))
      if (params.entry == null) return

      module.hot.accept()
      Component.__route = route

      if (module.hot.status() === 'idle') return

      var components = next.router.components
      for (var r in components) {
        if (!components.hasOwnProperty(r)) continue

        if (components[r].Component.__route === route) {
          next.router.update(r, Component)
        }
      }
    })(typeof __webpack_exports__ !== 'undefined' ? __webpack_exports__.default : (module.exports.default || module.exports), "/campaigns/new")
  
/* WEBPACK VAR INJECTION */}.call(exports, "?entry"))

/***/ })

})